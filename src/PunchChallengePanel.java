import java.util.Arrays;
import java.util.Random;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Jonathan Attias Khoudari
 */
public class PunchChallengePanel extends javax.swing.JPanel {

    /**
     * Creates new form PunchCountPanel
     */
    public PunchChallengePanel() {
        initComponents();
        setBackground(Main.baseColor);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        homeButton = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        settingsLabel = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        profileLabel = new javax.swing.JLabel();
        exitLabel = new javax.swing.JLabel();
        secondsLabel = new javax.swing.JLabel();
        punchChallengeTitle = new javax.swing.JLabel();
        secondsTitle = new javax.swing.JLabel();
        hoursTitle = new javax.swing.JLabel();
        hoursLabel = new javax.swing.JLabel();
        startButton = new javax.swing.JButton();
        startButton.setOpaque(false);
        startButton.setContentAreaFilled(false);
        //jButton1.setBorderPainted(false);
        stopButton = new javax.swing.JButton();
        stopButton.setOpaque(false);
        stopButton.setContentAreaFilled(false);
        //jButton1.setBorderPainted(false);
        resetButton = new javax.swing.JButton();
        resetButton.setOpaque(false);
        resetButton.setContentAreaFilled(false);
        //jButton1.setBorderPainted(false);
        thresholdForceTitle = new javax.swing.JLabel();
        thresholdForceLabel = new javax.swing.JLabel();
        validInvalidPunchesTitle = new javax.swing.JLabel();
        validInvalidPunchesLabel = new javax.swing.JLabel();
        averageForceTitle = new javax.swing.JLabel();
        averageForceLabel = new javax.swing.JLabel();
        forceMinusButton = new javax.swing.JButton();
        forcePlusButton = new javax.swing.JButton();
        hoursPlusButton = new javax.swing.JButton();
        hoursMinusButton = new javax.swing.JButton();
        secondsPlusButton = new javax.swing.JButton();
        secondsMinusButton = new javax.swing.JButton();
        minutesTitle = new javax.swing.JLabel();
        minutesLabel = new javax.swing.JLabel();
        minutesPlusButton = new javax.swing.JButton();
        minutesMinusButton = new javax.swing.JButton();
        currentTimeTitle = new javax.swing.JLabel();
        currentTimeLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 0, 55));
        setMixingCutoutShape(null);
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        homeButton.setBorderPainted(false);
        homeButton.setContentAreaFilled(false);
        homeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeButtonMouseClicked(evt);
            }
        });
        add(homeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 320, 50));

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-punching-bag-50.png"))); // NOI18N
        jLabel16.setOpaque(true);
        add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 0, 320, -1));

        settingsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        settingsLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-gear-50.png"))); // NOI18N
        settingsLabel.setOpaque(true);
        settingsLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                settingsLabelMouseClicked(evt);
            }
        });
        add(settingsLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 0, 320, -1));

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-home-50.png"))); // NOI18N
        jLabel11.setOpaque(true);
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 320, -1));

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-graph-50.png"))); // NOI18N
        jLabel18.setOpaque(true);
        add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 0, 320, -1));

        profileLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        profileLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-male-user-50.png"))); // NOI18N
        profileLabel.setOpaque(true);
        add(profileLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1280, 0, 320, -1));

        exitLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exitLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-open-door-50.png"))); // NOI18N
        exitLabel.setOpaque(true);
        exitLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitLabelMouseClicked(evt);
            }
        });
        add(exitLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1600, 0, 320, -1));

        secondsLabel.setFont(new java.awt.Font("Tahoma", 0, 100)); // NOI18N
        secondsLabel.setForeground(new java.awt.Color(240, 240, 240));
        secondsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        secondsLabel.setText("30");
        add(secondsLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 580, 280, -1));

        punchChallengeTitle.setFont(new java.awt.Font("Tahoma", 0, 80)); // NOI18N
        punchChallengeTitle.setForeground(new java.awt.Color(240, 240, 240));
        punchChallengeTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        punchChallengeTitle.setText("Punch Challenge");
        add(punchChallengeTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 130, 640, -1));

        secondsTitle.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        secondsTitle.setForeground(new java.awt.Color(240, 240, 240));
        secondsTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        secondsTitle.setText("Seconds");
        add(secondsTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 540, 500, -1));

        hoursTitle.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        hoursTitle.setForeground(new java.awt.Color(240, 240, 240));
        hoursTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hoursTitle.setText("Hours");
        add(hoursTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 230, 500, -1));

        hoursLabel.setFont(new java.awt.Font("Tahoma", 0, 100)); // NOI18N
        hoursLabel.setForeground(new java.awt.Color(240, 240, 240));
        hoursLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hoursLabel.setText("00");
        add(hoursLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 270, 180, -1));

        startButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        startButton.setForeground(new java.awt.Color(21, 140, 75));
        startButton.setText("Start");
        startButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(173, 216, 230)));
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });
        add(startButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 400, 160, 50));

        stopButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        stopButton.setForeground(new java.awt.Color(242, 0, 0));
        stopButton.setText("Stop");
        stopButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(173, 216, 230)));
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });
        add(stopButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 560, 160, 50));

        resetButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        resetButton.setForeground(new java.awt.Color(246, 225, 17));
        resetButton.setText("Reset");
        resetButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(173, 216, 230)));
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });
        add(resetButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 720, 160, 50));

        thresholdForceTitle.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        thresholdForceTitle.setForeground(new java.awt.Color(240, 240, 240));
        thresholdForceTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        thresholdForceTitle.setText("Threshold Force");
        add(thresholdForceTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 730, 500, -1));

        thresholdForceLabel.setFont(new java.awt.Font("Tahoma", 0, 100)); // NOI18N
        thresholdForceLabel.setForeground(new java.awt.Color(240, 240, 240));
        thresholdForceLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        thresholdForceLabel.setText("200");
        add(thresholdForceLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 780, 260, -1));

        validInvalidPunchesTitle.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        validInvalidPunchesTitle.setForeground(new java.awt.Color(240, 240, 240));
        validInvalidPunchesTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        validInvalidPunchesTitle.setText("Valid/Invalid Punches");
        add(validInvalidPunchesTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 290, 500, -1));

        validInvalidPunchesLabel.setFont(new java.awt.Font("Tahoma", 0, 100)); // NOI18N
        validInvalidPunchesLabel.setForeground(new java.awt.Color(240, 240, 240));
        validInvalidPunchesLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        validInvalidPunchesLabel.setText("0/0");
        add(validInvalidPunchesLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 360, 500, -1));

        averageForceTitle.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        averageForceTitle.setForeground(new java.awt.Color(240, 240, 240));
        averageForceTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        averageForceTitle.setText("Average Force");
        add(averageForceTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 710, 500, -1));

        averageForceLabel.setFont(new java.awt.Font("Tahoma", 0, 100)); // NOI18N
        averageForceLabel.setForeground(new java.awt.Color(240, 240, 240));
        averageForceLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        averageForceLabel.setText("-");
        add(averageForceLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 770, 550, -1));

        forceMinusButton.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        forceMinusButton.setForeground(new java.awt.Color(242, 0, 0));
        forceMinusButton.setText("-");
        forceMinusButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(173, 216, 230)));
        forceMinusButton.setPreferredSize(new java.awt.Dimension(19, 31));
        forceMinusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forceMinusButtonActionPerformed(evt);
            }
        });
        add(forceMinusButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 800, 70, 60));

        forcePlusButton.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        forcePlusButton.setForeground(new java.awt.Color(21, 140, 75));
        forcePlusButton.setText("+");
        forcePlusButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(173, 216, 230)));
        forcePlusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forcePlusButtonActionPerformed(evt);
            }
        });
        add(forcePlusButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 810, 70, 60));

        hoursPlusButton.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        hoursPlusButton.setForeground(new java.awt.Color(21, 140, 75));
        hoursPlusButton.setText("+");
        hoursPlusButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(173, 216, 230)));
        hoursPlusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hoursPlusButtonActionPerformed(evt);
            }
        });
        add(hoursPlusButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 300, 70, 60));

        hoursMinusButton.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        hoursMinusButton.setForeground(new java.awt.Color(242, 0, 0));
        hoursMinusButton.setText("-");
        hoursMinusButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(173, 216, 230)));
        hoursMinusButton.setPreferredSize(new java.awt.Dimension(19, 31));
        hoursMinusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hoursMinusButtonActionPerformed(evt);
            }
        });
        add(hoursMinusButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 300, 70, 60));

        secondsPlusButton.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        secondsPlusButton.setForeground(new java.awt.Color(21, 140, 75));
        secondsPlusButton.setText("+");
        secondsPlusButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(173, 216, 230)));
        secondsPlusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secondsPlusButtonActionPerformed(evt);
            }
        });
        add(secondsPlusButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 620, 70, 60));

        secondsMinusButton.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        secondsMinusButton.setForeground(new java.awt.Color(242, 0, 0));
        secondsMinusButton.setText("-");
        secondsMinusButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(173, 216, 230)));
        secondsMinusButton.setPreferredSize(new java.awt.Dimension(19, 31));
        secondsMinusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secondsMinusButtonActionPerformed(evt);
            }
        });
        add(secondsMinusButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 610, 70, 60));

        minutesTitle.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        minutesTitle.setForeground(new java.awt.Color(240, 240, 240));
        minutesTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minutesTitle.setText("Minutes");
        add(minutesTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 390, 500, -1));

        minutesLabel.setFont(new java.awt.Font("Tahoma", 0, 100)); // NOI18N
        minutesLabel.setForeground(new java.awt.Color(240, 240, 240));
        minutesLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minutesLabel.setText("00");
        add(minutesLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 430, 280, -1));

        minutesPlusButton.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        minutesPlusButton.setForeground(new java.awt.Color(21, 140, 75));
        minutesPlusButton.setText("+");
        minutesPlusButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(173, 216, 230)));
        minutesPlusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minutesPlusButtonActionPerformed(evt);
            }
        });
        add(minutesPlusButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 470, 70, 60));

        minutesMinusButton.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        minutesMinusButton.setForeground(new java.awt.Color(242, 0, 0));
        minutesMinusButton.setText("-");
        minutesMinusButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(173, 216, 230)));
        minutesMinusButton.setPreferredSize(new java.awt.Dimension(19, 31));
        minutesMinusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minutesMinusButtonActionPerformed(evt);
            }
        });
        add(minutesMinusButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 460, 70, 60));

        currentTimeTitle.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        currentTimeTitle.setForeground(new java.awt.Color(240, 240, 240));
        currentTimeTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        currentTimeTitle.setText("Current Time");
        add(currentTimeTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 500, 500, -1));

        currentTimeLabel.setFont(new java.awt.Font("Tahoma", 0, 100)); // NOI18N
        currentTimeLabel.setForeground(new java.awt.Color(240, 240, 240));
        currentTimeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        currentTimeLabel.setText("00:00:00.00");
        add(currentTimeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 570, 550, -1));
    }// </editor-fold>//GEN-END:initComponents

    private int hours = 0;
    private int minutes = 0;
    private int seconds = 30;
    private int ms = 0;
    private int invalid = 0;
    private int valid = 0;
    private int num = 0;
    private boolean start = false;
    private int forceThreshold = 200;
    private boolean running = false;
    private int[] punchForces;
    private int punchCounter;
    
    private int[] fillArray(int[] array, int max) {
        Random randomGenerator = new Random();
        for (int i = 0; i < array.length; i++) {
            array[i] = randomGenerator.nextInt(max) + 1;
        }
        return array;
    }
    
    private int calculateAvgForce() {
        // TODO figure out if we need to use locks for this
        int avgForce = 0;
        for (int i = 0; i < punchCounter; i++) {
            avgForce += punchForces[i] / punchCounter;
        }
        return avgForce;
    }
    
    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        int numOfPunches = (hours * 3600) + (minutes * 60) + seconds;
        punchForces = new int[numOfPunches];
        int maxForce = forceThreshold * 2;
        punchForces = fillArray(punchForces, maxForce);
        punchCounter = 0;
        
        Thread avgForceCalc = new Thread() {
            public void run() {
                while (start == true) {
                    try {
                        sleep(1000);
                        punchCounter++;
                        int avgForce = calculateAvgForce();
                        averageForceLabel.setText(Integer.toString(avgForce));
                    } catch(Exception e) {
                        System.out.println("Error");
                    }
                }
            }
        };
                
        Thread timer = new Thread() {
            public void run() {
                while (start == true) {
                    try {
                        sleep(10);
                        ms--;
                        if(ms == -1) {
                            if(seconds % 2 == 0) {
                                num++;
                                valid++;
                                renderValidInvalidPunches();
                            }
                            if(seconds % 3 == 0) {
                                invalid++;
                                renderValidInvalidPunches();
                            }
                            seconds--;
                            ms = 99;
                        }
                        if(seconds == -1) {
                            minutes--;
                            seconds = 59;
                        }
                        if (minutes == -1) {
                            hours--;
                            minutes = 59;
                        }
                        String hoursString = String.format("%02d", hours);
                        String minutesString = String.format("%02d", minutes);
                        String secondsString = String.format("%02d", seconds);
                        String msString = String.format("%02d", ms);
                        currentTimeLabel.setText(hoursString + ":" + minutesString + ":" + secondsString + "." + msString);
                                                
                        if(ms == 0 && seconds == 0 && minutes == 0 && hours == 0) {
                            break;
                        }
                    } catch(Exception e) {
                        System.out.println("Error");
                    }
                }
            }
        };
        
        if (start == false && !(hours == 0 && minutes == 0 && seconds == 0)) {
            start = true;
            running = true;
            timer.start();
            avgForceCalc.start();
        }
    }//GEN-LAST:event_startButtonActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        start = false;
    }//GEN-LAST:event_stopButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        Main.transitionToPage(7) ;
        /*
            start = false;
            ms = 0;
            seconds = 0;
            minutes = 0;
            invalid = 0;
            valid = 0;
            String minutes_str = String.format("%02d", minutes);
            String seconds_str = String.format("%02d", seconds);
            String ms_str = String.format("%02d", ms);
            jLabel14.setText(minutes_str + ":" + seconds_str + "." + ms_str);
            jLabel7.setText(String.valueOf(invalid));
            jLabel12.setText(String.valueOf(valid));
            jLabel21.setText("0");
        */
    }//GEN-LAST:event_resetButtonActionPerformed

    private void homeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeButtonMouseClicked
        Main.transitionToPage(1);
    }//GEN-LAST:event_homeButtonMouseClicked

    private void settingsLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingsLabelMouseClicked
        Main.transitionToPage(6);
    }//GEN-LAST:event_settingsLabelMouseClicked

    private void exitLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitLabelMouseClicked
        Main.closeFrame();
    }//GEN-LAST:event_exitLabelMouseClicked

    private void forceMinusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forceMinusButtonActionPerformed
        if(forceThreshold > 0) {
            forceThreshold -= 100;
        } else {
            forceThreshold = 0;
        }
        String decreasedThreshold = String.format("%,d", forceThreshold);
        thresholdForceLabel.setText(decreasedThreshold);
    }//GEN-LAST:event_forceMinusButtonActionPerformed

    private void forcePlusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forcePlusButtonActionPerformed
        forceThreshold += 100;
        String increasedGoal = String.format("%,d", forceThreshold);
        thresholdForceLabel.setText(increasedGoal);
    }//GEN-LAST:event_forcePlusButtonActionPerformed

    private void hoursPlusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hoursPlusButtonActionPerformed
        if (running == false) {
            hoursPlus();
            renderTime();
        }
    }//GEN-LAST:event_hoursPlusButtonActionPerformed

    private void hoursMinusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hoursMinusButtonActionPerformed
        if (running == false) {
            hoursMinus();
            renderTime();
        }
    }//GEN-LAST:event_hoursMinusButtonActionPerformed

    private void secondsPlusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secondsPlusButtonActionPerformed
        if (running == false) {
            secondsPlus();
            renderTime();
        }
    }//GEN-LAST:event_secondsPlusButtonActionPerformed

    private void secondsMinusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secondsMinusButtonActionPerformed
        if (running == false) {
            secondsMinus();
            renderTime();
        }
    }//GEN-LAST:event_secondsMinusButtonActionPerformed

    private void minutesPlusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minutesPlusButtonActionPerformed
        if (running == false) {
            minutesPlus();
            renderTime();
        }
    }//GEN-LAST:event_minutesPlusButtonActionPerformed

    private void minutesMinusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minutesMinusButtonActionPerformed
        if (running == false) {
            minutesMinus();
            renderTime();
        }
    }//GEN-LAST:event_minutesMinusButtonActionPerformed

    private void secondsPlus() {
        if (seconds < 59) {
            seconds++;
        }
    }
    
    private void secondsMinus() {
        if (seconds > 0) {
            seconds--;
        }
    }
    
    private void minutesPlus() {
        if (minutes < 59) {
            minutes++;
        }
    }
    
    private void minutesMinus() {
        if (minutes > 0) {
            minutes--;
        }
    }
    
    private void hoursPlus() {
        if (hours < 10) {
            hours++;
        }
    }
    
    private void hoursMinus() {
        if (hours > 0) {
            hours--;
        }
    }
    
    private void renderTime() {
        String secondsString = seconds < 10 ? String.format("0%d", seconds) : String.format("%d", seconds);
        String minutesString = minutes < 10 ? String.format("0%d", minutes) : String.format("%d", minutes);
        String hoursString = hours < 10 ? String.format("0%d", hours) : String.format("%d", hours);
            
        secondsLabel.setText(secondsString);
        minutesLabel.setText(minutesString);
        hoursLabel.setText(hoursString);
    }
    
    private void renderValidInvalidPunches() {
        String validInvalidPunches = String.format("%d/%d", valid, invalid);
        validInvalidPunchesLabel.setText(validInvalidPunches);
    }
    
    // <editor-fold defaultstate="collapsed" desc="Variables declaration">
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel averageForceLabel;
    private javax.swing.JLabel averageForceTitle;
    private javax.swing.JLabel currentTimeLabel;
    private javax.swing.JLabel currentTimeTitle;
    private javax.swing.JLabel exitLabel;
    private javax.swing.JButton forceMinusButton;
    private javax.swing.JButton forcePlusButton;
    private javax.swing.JButton homeButton;
    private javax.swing.JLabel hoursLabel;
    private javax.swing.JButton hoursMinusButton;
    private javax.swing.JButton hoursPlusButton;
    private javax.swing.JLabel hoursTitle;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel minutesLabel;
    private javax.swing.JButton minutesMinusButton;
    private javax.swing.JButton minutesPlusButton;
    private javax.swing.JLabel minutesTitle;
    private javax.swing.JLabel profileLabel;
    private javax.swing.JLabel punchChallengeTitle;
    private javax.swing.JButton resetButton;
    private javax.swing.JLabel secondsLabel;
    private javax.swing.JButton secondsMinusButton;
    private javax.swing.JButton secondsPlusButton;
    private javax.swing.JLabel secondsTitle;
    private javax.swing.JLabel settingsLabel;
    private javax.swing.JButton startButton;
    private javax.swing.JButton stopButton;
    private javax.swing.JLabel thresholdForceLabel;
    private javax.swing.JLabel thresholdForceTitle;
    private javax.swing.JLabel validInvalidPunchesLabel;
    private javax.swing.JLabel validInvalidPunchesTitle;
    // End of variables declaration//GEN-END:variables
    // </editor-fold> 
}
